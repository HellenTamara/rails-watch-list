var e;(function(e){e.Attribute="attribute";e.Pseudo="pseudo";e.PseudoElement="pseudo-element";e.Tag="tag";e.Universal="universal";e.Adjacent="adjacent";e.Child="child";e.Descendant="descendant";e.Parent="parent";e.Sibling="sibling";e.ColumnCombinator="column-combinator"})(e||(e={}));const t={Unknown:null,QuirksMode:"quirks",IgnoreCase:true,CaseSensitive:false};var a;(function(e){e.Any="any";e.Element="element";e.End="end";e.Equals="equals";e.Exists="exists";e.Hyphen="hyphen";e.Not="not";e.Start="start"})(a||(a={}));const n=/^[^\\#]?(?:\\(?:[\da-f]{1,6}\s?|.)|[\w\-\u00b0-\uFFFF])+/;const s=/\\([\da-f]{1,6}\s?|(\s)|.)/gi;const r=new Map([[126,a.Element],[94,a.Start],[36,a.End],[42,a.Any],[33,a.Not],[124,a.Hyphen]]);const c=new Set(["has","not","matches","is","where","host","host-context"]);
/**
 * Checks whether a specific selector is a traversal.
 * This is useful eg. in swapping the order of elements that
 * are not traversals.
 *
 * @param selector Selector to check.
 */function isTraversal(t){switch(t.type){case e.Adjacent:case e.Child:case e.Descendant:case e.Parent:case e.Sibling:case e.ColumnCombinator:return true;default:return false}}const i=new Set(["contains","icontains"]);function funescape(e,t,a){const n=parseInt(t,16)-65536;return n!==n||a?t:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)}function unescapeCSS(e){return e.replace(s,funescape)}function isQuote(e){return 39===e||34===e}function isWhitespace(e){return 32===e||9===e||10===e||12===e||13===e}
/**
 * Parses `selector`, optionally with the passed `options`.
 *
 * @param selector Selector to parse.
 * @param options Options for parsing.
 * @returns Returns a two-dimensional array.
 * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),
 * the second contains the relevant tokens for that selector.
 */function parse(e){const t=[];const a=parseSelector(t,`${e}`,0);if(a<e.length)throw new Error(`Unmatched selector: ${e.slice(a)}`);return t}function parseSelector(t,s,o){let l=[];function getName(e){const t=s.slice(o+e).match(n);if(!t)throw new Error(`Expected name, found ${s.slice(o)}`);const[a]=t;o+=e+a.length;return unescapeCSS(a)}function stripWhitespace(e){o+=e;while(o<s.length&&isWhitespace(s.charCodeAt(o)))o++}function readValueWithParenthesis(){o+=1;const e=o;let t=1;for(;t>0&&o<s.length;o++)40!==s.charCodeAt(o)||isEscaped(o)?41!==s.charCodeAt(o)||isEscaped(o)||t--:t++;if(t)throw new Error("Parenthesis not matched");return unescapeCSS(s.slice(e,o-1))}function isEscaped(e){let t=0;while(92===s.charCodeAt(--e))t++;return 1===(1&t)}function ensureNotTraversal(){if(l.length>0&&isTraversal(l[l.length-1]))throw new Error("Did not expect successive traversals.")}function addTraversal(t){if(l.length>0&&l[l.length-1].type===e.Descendant)l[l.length-1].type=t;else{ensureNotTraversal();l.push({type:t})}}function addSpecialAttribute(t,a){l.push({type:e.Attribute,name:t,action:a,value:getName(1),namespace:null,ignoreCase:"quirks"})}function finalizeSubselector(){l.length&&l[l.length-1].type===e.Descendant&&l.pop();if(0===l.length)throw new Error("Empty sub-selector");t.push(l)}stripWhitespace(0);if(s.length===o)return o;e:while(o<s.length){const t=s.charCodeAt(o);switch(t){case 32:case 9:case 10:case 12:case 13:if(0===l.length||l[0].type!==e.Descendant){ensureNotTraversal();l.push({type:e.Descendant})}stripWhitespace(1);break;case 62:addTraversal(e.Child);stripWhitespace(1);break;case 60:addTraversal(e.Parent);stripWhitespace(1);break;case 126:addTraversal(e.Sibling);stripWhitespace(1);break;case 43:addTraversal(e.Adjacent);stripWhitespace(1);break;case 46:addSpecialAttribute("class",a.Element);break;case 35:addSpecialAttribute("id",a.Equals);break;case 91:{stripWhitespace(1);let t;let n=null;if(124===s.charCodeAt(o))t=getName(1);else if(s.startsWith("*|",o)){n="*";t=getName(2)}else{t=getName(0);if(124===s.charCodeAt(o)&&61!==s.charCodeAt(o+1)){n=t;t=getName(1)}}stripWhitespace(0);let c=a.Exists;const i=r.get(s.charCodeAt(o));if(i){c=i;if(61!==s.charCodeAt(o+1))throw new Error("Expected `=`");stripWhitespace(2)}else if(61===s.charCodeAt(o)){c=a.Equals;stripWhitespace(1)}let u="";let h=null;if("exists"!==c){if(isQuote(s.charCodeAt(o))){const e=s.charCodeAt(o);let t=o+1;while(t<s.length&&(s.charCodeAt(t)!==e||isEscaped(t)))t+=1;if(s.charCodeAt(t)!==e)throw new Error("Attribute value didn't end");u=unescapeCSS(s.slice(o+1,t));o=t+1}else{const e=o;while(o<s.length&&(!isWhitespace(s.charCodeAt(o))&&93!==s.charCodeAt(o)||isEscaped(o)))o+=1;u=unescapeCSS(s.slice(e,o))}stripWhitespace(0);const e=32|s.charCodeAt(o);if(115===e){h=false;stripWhitespace(1)}else if(105===e){h=true;stripWhitespace(1)}}if(93!==s.charCodeAt(o))throw new Error("Attribute selector didn't terminate");o+=1;const p={type:e.Attribute,name:t,action:c,value:u,namespace:n,ignoreCase:h};l.push(p);break}case 58:{if(58===s.charCodeAt(o+1)){l.push({type:e.PseudoElement,name:getName(2).toLowerCase(),data:40===s.charCodeAt(o)?readValueWithParenthesis():null});continue}const t=getName(1).toLowerCase();let a=null;if(40===s.charCodeAt(o))if(c.has(t)){if(isQuote(s.charCodeAt(o+1)))throw new Error(`Pseudo-selector ${t} cannot be quoted`);a=[];o=parseSelector(a,s,o+1);if(41!==s.charCodeAt(o))throw new Error(`Missing closing parenthesis in :${t} (${s})`);o+=1}else{a=readValueWithParenthesis();if(i.has(t)){const e=a.charCodeAt(0);e===a.charCodeAt(a.length-1)&&isQuote(e)&&(a=a.slice(1,-1))}a=unescapeCSS(a)}l.push({type:e.Pseudo,name:t,data:a});break}case 44:finalizeSubselector();l=[];stripWhitespace(1);break;default:{if(s.startsWith("/*",o)){const e=s.indexOf("*/",o+2);if(e<0)throw new Error("Comment was not terminated");o=e+2;0===l.length&&stripWhitespace(0);break}let a=null;let r;if(42===t){o+=1;r="*"}else if(124===t){r="";if(124===s.charCodeAt(o+1)){addTraversal(e.ColumnCombinator);stripWhitespace(2);break}}else{if(!n.test(s.slice(o)))break e;r=getName(0)}if(124===s.charCodeAt(o)&&124!==s.charCodeAt(o+1)){a=r;if(42===s.charCodeAt(o+1)){r="*";o+=2}else r=getName(1)}l.push("*"===r?{type:e.Universal,namespace:a}:{type:e.Tag,name:r,namespace:a})}}}finalizeSubselector();return o}const o=["\\",'"'];const l=[...o,"(",")"];const u=new Set(o.map((e=>e.charCodeAt(0))));const h=new Set(l.map((e=>e.charCodeAt(0))));const p=new Set([...l,"~","^","$","*","+","!","|",":","[","]"," ","."].map((e=>e.charCodeAt(0))));
/**
 * Turns `selector` back into a string.
 *
 * @param selector Selector to stringify.
 */function stringify(e){return e.map((e=>e.map(stringifyToken).join(""))).join(", ")}function stringifyToken(t,n,s){switch(t.type){case e.Child:return 0===n?"> ":" > ";case e.Parent:return 0===n?"< ":" < ";case e.Sibling:return 0===n?"~ ":" ~ ";case e.Adjacent:return 0===n?"+ ":" + ";case e.Descendant:return" ";case e.ColumnCombinator:return 0===n?"|| ":" || ";case e.Universal:return"*"===t.namespace&&n+1<s.length&&"name"in s[n+1]?"":`${getNamespace(t.namespace)}*`;case e.Tag:return getNamespacedName(t);case e.PseudoElement:return`::${escapeName(t.name,p)}${null===t.data?"":`(${escapeName(t.data,h)})`}`;case e.Pseudo:return`:${escapeName(t.name,p)}${null===t.data?"":`(${"string"===typeof t.data?escapeName(t.data,h):stringify(t.data)})`}`;case e.Attribute:{if("id"===t.name&&t.action===a.Equals&&"quirks"===t.ignoreCase&&!t.namespace)return`#${escapeName(t.value,p)}`;if("class"===t.name&&t.action===a.Element&&"quirks"===t.ignoreCase&&!t.namespace)return`.${escapeName(t.value,p)}`;const e=getNamespacedName(t);return t.action===a.Exists?`[${e}]`:`[${e}${getActionValue(t.action)}="${escapeName(t.value,u)}"${null===t.ignoreCase?"":t.ignoreCase?" i":" s"}]`}}}function getActionValue(e){switch(e){case a.Equals:return"";case a.Element:return"~";case a.Start:return"^";case a.End:return"$";case a.Any:return"*";case a.Not:return"!";case a.Hyphen:return"|";case a.Exists:throw new Error("Shouldn't be here")}}function getNamespacedName(e){return`${getNamespace(e.namespace)}${escapeName(e.name,p)}`}function getNamespace(e){return null!==e?`${"*"===e?"*":escapeName(e,p)}|`:""}function escapeName(e,t){let a=0;let n="";for(let s=0;s<e.length;s++)if(t.has(e.charCodeAt(s))){n+=`${e.slice(a,s)}\\${e.charAt(s)}`;a=s+1}return n.length>0?n+e.slice(a):e}export{a as AttributeAction,t as IgnoreCaseMode,e as SelectorType,isTraversal,parse,stringify};

