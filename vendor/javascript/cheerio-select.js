import{SelectorType as e,parse as t,isTraversal as n}from"css-what";import{_compileToken as r,prepareContext as i}from"css-select";export{aliases,filters,pseudos}from"css-select";import*as s from"domutils";import*as o from"boolbase";const l=new Set(["first","last","eq","gt","nth","lt","even","odd"]);function isFilter(e){return"pseudo"===e.type&&(!!l.has(e.name)||!("not"!==e.name||!Array.isArray(e.data))&&e.data.some((e=>e.some(isFilter))))}function getLimit(e,t,n){const r=null!=t?parseInt(t,10):NaN;switch(e){case"first":return 1;case"nth":case"eq":return isFinite(r)?r>=0?r+1:Infinity:0;case"lt":return isFinite(r)?r>=0?Math.min(r,n):Infinity:0;case"gt":return isFinite(r)?Infinity:0;case"odd":return 2*n;case"even":return 2*n-1;case"last":case"not":return Infinity}}function getDocumentRoot(e){while(e.parent)e=e.parent;return e}function groupSelectors(e){const t=[];const n=[];for(const r of e)r.some(isFilter)?t.push(r):n.push(r);return[n,t]}const c={type:e.Universal,namespace:null};const f={type:e.Pseudo,name:"scope",data:null};function is(e,t,n={}){return some([e],t,n)}function some(e,n,i={}){if("function"===typeof n)return e.some(n);const[s,o]=groupSelectors(t(n));return s.length>0&&e.some(r(s,i))||o.some((t=>filterBySelector(t,e,i).length>0))}function filterByPosition(e,t,n,r){const i="string"===typeof n?parseInt(n,10):NaN;switch(e){case"first":case"lt":return t;case"last":return t.length>0?[t[t.length-1]]:t;case"nth":case"eq":return isFinite(i)&&Math.abs(i)<t.length?[i<0?t[t.length+i]:t[i]]:[];case"gt":return isFinite(i)?t.slice(i+1):[];case"even":return t.filter(((e,t)=>t%2===0));case"odd":return t.filter(((e,t)=>t%2===1));case"not":{const e=new Set(filterParsed(n,t,r));return t.filter((t=>!e.has(t)))}}}function filter(e,n,r={}){return filterParsed(t(e),n,r)}
/**
 * Filter a set of elements by a selector.
 *
 * Will return elements in the original order.
 *
 * @param selector Selector to filter by.
 * @param elements Elements to filter.
 * @param options Options for selector.
 */function filterParsed(e,t,n){if(0===t.length)return[];const[r,i]=groupSelectors(e);let o;if(r.length){const e=filterElements(t,r,n);if(0===i.length)return e;e.length&&(o=new Set(e))}for(let e=0;e<i.length&&(null===o||void 0===o?void 0:o.size)!==t.length;e++){const r=i[e];const l=o?t.filter((e=>s.isTag(e)&&!o.has(e))):t;if(0===l.length)break;const c=filterBySelector(r,t,n);if(c.length)if(o)c.forEach((e=>o.add(e)));else{if(e===i.length-1)return c;o=new Set(c)}}return"undefined"!==typeof o?o.size===t.length?t:t.filter((e=>o.has(e))):[]}function filterBySelector(e,t,r){var i;if(e.some(n)){const n=null!==(i=r.root)&&void 0!==i?i:getDocumentRoot(t[0]);const s={...r,context:t,relativeSelector:false};e.push(f);return findFilterElements(n,e,s,true,t.length)}return findFilterElements(t,e,r,false,t.length)}function select(e,n,r={},i=Infinity){if("function"===typeof e)return find(n,e);const[o,l]=groupSelectors(t(e));const c=l.map((e=>findFilterElements(n,e,r,true,i)));o.length&&c.push(findElements(n,o,r,i));return 0===c.length?[]:1===c.length?c[0]:s.uniqueSort(c.reduce(((e,t)=>[...e,...t])))}
/**
 *
 * @param root Element(s) to search from.
 * @param selector Selector to look for.
 * @param options Options for querying.
 * @param queryForSelector Query multiple levels deep for the initial selector, even if it doesn't contain a traversal.
 */function findFilterElements(t,r,l,f,u){const a=r.findIndex(isFilter);const h=r.slice(0,a);const m=r[a];const g=r.length-1===a?u:Infinity;const d=getLimit(m.name,m.data,g);if(0===d)return[];const p=0!==h.length||Array.isArray(t)?0===h.length?(Array.isArray(t)?t:[t]).filter(s.isTag):f||h.some(n)?findElements(t,[h],l,d):filterElements(t,[h],l):s.getChildren(t).filter(s.isTag);const y=p.slice(0,d);let F=filterByPosition(m.name,y,m.data,l);if(0===F.length||r.length===a+1)return F;const S=r.slice(a+1);const E=S.some(n);if(E){if(n(S[0])){const{type:t}=S[0];t!==e.Sibling&&t!==e.Adjacent||(F=i(F,s,true));S.unshift(c)}l={...l,relativeSelector:false,rootFunc:e=>F.includes(e)}}else l.rootFunc&&l.rootFunc!==o.trueFunc&&(l={...l,rootFunc:o.trueFunc});return S.some(isFilter)?findFilterElements(F,S,l,false,u):E?findElements(F,[S],l,u):filterElements(F,[S],l)}function findElements(e,t,n,i){const s=r(t,n,e);return find(e,s,i)}function find(e,t,n=Infinity){const r=i(e,s,t.shouldTestNextSiblings);return s.find((e=>s.isTag(e)&&t(e)),r,true,n)}function filterElements(e,t,n){const i=(Array.isArray(e)?e:[e]).filter(s.isTag);if(0===i.length)return i;const l=r(t,n);return l===o.trueFunc?i:i.filter(l)}export{filter,is,select,some};

